#!/bin/bash

# test 1-9: normalization: YES
# test 10:  normalization: NO

TESTDIR=$1
echo "------------------------------------------------"
echo "running NORMALIZATION TESTS"
echo "------------------------------------------------"

BENCH_PASS=0
BENCH_FAIL=0

function NormalizationTests {
    testNumbers=`echo {01..46}`
    # 90 fails because of public/private type scopes
    # 91-92 fail because of declaration in condition
    echo "Scheduled tests: $testNumbers"
    for testNumber in $testNumbers; do
        benchmarkprefix=$TESTDIR/NORM${testNumber};
        for benchmark in ${benchmarkprefix}*.[cC]; do
            benchmarkname=$(basename $benchmark)
            if [[ $benchmark = *.c ]]; then
                echo -n "Testing C $benchmarkname: "
                gcc $benchmark
            else
                echo -n "Testing C++ $benchmarkname: "
                g++ $benchmark
            fi
            ./codethorn $benchmark --normalize-all=yes --unparse=yes --quiet --abstraction-mode=1 > /dev/null
            if [ ! $? -eq 0 ]
            then
	            echo "FAIL"
                exit 1
            fi
            if [[ $benchmark = *.c ]]; then
                gcc rose_${benchmarkname} 
            else
                g++ rose_${benchmarkname} 
            fi
            if [ ! $? -eq 0 ]
            then
	        echo "FAIL"
                exit 1
            else
	        echo "PASS"
		rm -f rose_${benchmarkname}
            fi
        done
    done
}

NormalizationTests

rm -f rose_normalization*.C
rm -f a.out

